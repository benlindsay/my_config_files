#------------------------------------------------------------------
# Aliases and functions specific to rrlogin
#------------------------------------------------------------------

# aliases
alias l.='ls -d .* --color'
alias jnremote="jupyter notebook --no-browser --port=8888"

function jlremote {
  echo $(hostname) > ~/.jupyternode.txt
  XDG_RUNTIME_DIR= jupyter lab --no-browser --port=8888 --ip=$(hostname)
}

# variables
export PATH="$HOME/usr/doxygen/bin:$PATH"
export PATH="$HOME/.linuxbrew/bin:$PATH"
# export PATH="$HOME/usr/anaconda/bin:$PATH"
export PATH="$HOME/bin:$PATH"
# export PYTHONPATH="$PYTHONPATH:/home/lindsb/usr/site-packages"
# export FFTW_OPENMP="/opt/seas/pkg/gcc/fftw3/openmp/double/3.3.7"
# export FFTW_MPI="/opt/seas/pkg/gcc/fftw3/mpi/double/3.3.7"
# export FFTW_DIR="/opt/seas/pkg/gcc/fftw3/mpi/double/3.3.7"
export FFTW_OPENMP="$HOME/.linuxbrew"
export FFTW_MPI="$HOME/.linuxbrew"
export FFTW_DIR="$HOME/.linuxbrew"
export EDITOR="vim"

# modules
# module load gcc/fftw3/mpi/double/3.3.7
# module load gcc/fftw3/openmp/double/3.3.7

# export CPLUS_INCLUDE_PATH="$HOME/usr/boost/include:$CPLUS_INCLUDE_PATH"
# export LIBRARY_PATH="$HOME/usr/boost/lib:$LIBRARY_PATH"

export NP_PMF_PROJ="$HOME/studies/np-pmf"
export BCP_NP_PHASE_PROJ="$HOME/studies/bcp-np-phase"
export VDW_PROJ="$HOME/studies/vdw-interactions"
export DMFT_ADS_PROJ="$HOME/studies/dmft-adsorbing-polymer"

# export LD_LIBRARY_PATH="/home/lindsb/.linuxbrew/lib:/opt/seas/lib64"

# iterm2 stuff
export iterm2_hostname=rrlogin.seas.upenn.edu
shell_name=$(basename $SHELL)
if [ -f ~/.iterm2_shell_integration.$shell_name ]; then
  source ~/.iterm2_shell_integration.$shell_name
fi

# Make conda command available
if [ -f ~/usr/anaconda/etc/profile.d/conda.sh ]; then
  . ~/usr/anaconda/etc/profile.d/conda.sh
fi

# functions
# function path_minus_linuxbrew {
#   # returns the same path variable but with linuxbrew removed
#   export PATH_WITH_LINUXBREW=$PATH
#   echo $PATH | awk -v RS=: -v ORS=: '/linuxbrew/ {next} {print}' | sed 's/:*$//'
# }

function remove_linuxbrew_from_path {
  export PATH_WITH_LINUXBREW=$PATH
  export PATH=$(echo $PATH | awk -v RS=: -v ORS=: '/linuxbrew/ {next} {print}' | sed 's/:*$//')
}

function restore_linuxbrew_to_path {
  if [ -z $PATH_WITH_LINUXBREW ]; then
    echo "PATH_WITH_LINUXBREW not defined"
  else
    export PATH=$PATH_WITH_LINUXBREW
  fi
}

function load_modules {
  module load gcc/fftw3/mpi/double/3.3.7
  module load gcc/fftw3/openmp/double/3.3.7
}

function load_gcc {
  module load gcc/5.4
  export LD_LIBRARY_PATH="/opt/pkg/gcc/5.4/lib:$LD_LIBRARY_PATH"
  export LD_LIBRARY_PATH="/opt/pkg/gcc/5.4/lib64:$LD_LIBRARY_PATH"
}

function getsimdir {
  if [ ! -z "$1" ]; then
    jobid="$1"
  else
    echo "Usage: getsimdir [Slurm Job ID]"
    return 1
  fi
  simdir=$(scontrol show job $jobid | grep WorkDir | cut -d "=" -f 2)
  echo "$simdir"
}

function print_usage {
  echo "Nodes:"
  echo -n "  "
  sinfo | grep p_rrig | awk '{print $5": "$4"/24"}' | tr "\n" "\t"
  echo
  echo "CPUs:"
  echo -n "  "
  sinfo -o "%C" | tail -1 | tr "/" " " | awk '{print "alloc: "$1"/288\tidle: "$2"/288\tother: "$3"/288"}'
}

function showq2 {
  showq
  echo
  print_usage
}

# alias showq='showq; echo; print_usage'
